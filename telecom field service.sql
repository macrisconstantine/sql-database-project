-- Generated by Oracle SQL Developer Data Modeler 21.2.0.183.1957
--   at:        2021-12-07 08:39:01 EET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



DROP TABLE customer CASCADE CONSTRAINTS;

DROP TABLE expense CASCADE CONSTRAINTS;

DROP TABLE inventory CASCADE CONSTRAINTS;

DROP TABLE job CASCADE CONSTRAINTS;

DROP TABLE pricelist CASCADE CONSTRAINTS;

DROP TABLE subcontractor CASCADE CONSTRAINTS;

DROP TABLE subcontract CASCADE CONSTRAINTS;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE customer (
    id        INTEGER NOT NULL,
    lastname  VARCHAR2(20 CHAR) NOT NULL,
    firstname VARCHAR2(20 CHAR) NOT NULL,
    address   VARCHAR2(50 CHAR),
    telephone INTEGER,
    email     VARCHAR2(40 CHAR) NOT NULL,
    priority  VARCHAR2(10 CHAR)
);

COMMENT ON COLUMN customer.priority IS
    'low/high/very low/very high/(null)';

ALTER TABLE customer ADD CONSTRAINT customer_pk PRIMARY KEY ( id );

CREATE TABLE expense (
    id           INTEGER NOT NULL,
    description  VARCHAR2(30 CHAR) NOT NULL,
    cost         NUMBER(10, 2) NOT NULL,
    job_id       INTEGER,
    customer_id  INTEGER,
    inventory_id INTEGER,
    reimbursable VARCHAR2(8)
);

COMMENT ON COLUMN expense.description IS
    'job type (i.e. router box installation)';

COMMENT ON COLUMN expense.reimbursable IS
    '(yes/no/null)';

ALTER TABLE expense ADD CONSTRAINT expense_pk PRIMARY KEY ( id );

CREATE TABLE inventory (
    id         INTEGER NOT NULL,
    item       VARCHAR2(20 CHAR) NOT NULL,
    quantity   INTEGER,
    consumable VARCHAR2(8 CHAR)
);

COMMENT ON COLUMN inventory.item IS
    'inventory item description ';

COMMENT ON COLUMN inventory.consumable IS
    'equipment or depletable resource (yes/no)';

ALTER TABLE inventory ADD CONSTRAINT inventory_pk PRIMARY KEY ( id );

CREATE TABLE job (
    id             INTEGER NOT NULL,
    description    VARCHAR2(50 CHAR) NOT NULL,
    job_date       DATE,
    address        VARCHAR2(50 CHAR) NOT NULL,
    distance_km    NUMBER(10, 2),
    drive_time_hrs NUMBER(10, 2),
    start_time     TIMESTAMP,
    end_time       TIMESTAMP,
    status         VARCHAR2(10 CHAR),
    customer_id    INTEGER NOT NULL,
    payment        NUMBER(10, 2)
);

COMMENT ON COLUMN job.description IS
    'job type (i.e. router box installation)';

COMMENT ON COLUMN job.job_date IS
    'starting date of job';

COMMENT ON COLUMN job.distance_km IS
    'distance (km) from office to job address.';

COMMENT ON COLUMN job.drive_time_hrs IS
    'estimated time it will take to get to job address.';

COMMENT ON COLUMN job.start_time IS
    'starting time of job';

COMMENT ON COLUMN job.end_time IS
    'ending time of job (initially estimate)';

COMMENT ON COLUMN job.status IS
    'completed/active/delayed (or null)';

ALTER TABLE job ADD CONSTRAINT job_pk PRIMARY KEY ( id );

CREATE TABLE pricelist (
    id          INTEGER NOT NULL,
    work_type   VARCHAR2(15 CHAR),
    rate_per_hr NUMBER(10, 2)
);

COMMENT ON COLUMN pricelist.work_type IS
    'what type of work the subcontractor is best at';

COMMENT ON COLUMN pricelist.rate_per_hr IS
    'includes approximate estimate of material cost for typical job of given time allotment';

ALTER TABLE pricelist ADD CONSTRAINT pricelist_pk PRIMARY KEY ( id );

CREATE TABLE subcontractor (
    id             INTEGER NOT NULL,
    specialty      VARCHAR2(15 CHAR),
    sub_name       VARCHAR2(20 CHAR) NOT NULL,
    sub_first      VARCHAR2(20 CHAR) NOT NULL,
    rate_per_hr    NUMBER(10, 2),
    wks_until_able INTEGER,
    sub_address    VARCHAR2(50 CHAR),
    sub_tel        INTEGER,
    sub_email      VARCHAR2(40 CHAR)
);

COMMENT ON COLUMN subcontractor.specialty IS
    'what type of work the subcontractor is best at';

ALTER TABLE subcontractor ADD CONSTRAINT subcontractor_pk PRIMARY KEY ( id );

CREATE TABLE subcontract (
    sub_id INTEGER NOT NULL,
    job_id INTEGER NOT NULL
);

ALTER TABLE subcontract ADD CONSTRAINT job_subcontractors_pk PRIMARY KEY ( sub_id,
                                                                            job_id );

ALTER TABLE expense
    ADD CONSTRAINT expense_customer_fk FOREIGN KEY ( customer_id )
        REFERENCES customer ( id );

ALTER TABLE expense
    ADD CONSTRAINT expense_inventory_fk FOREIGN KEY ( inventory_id )
        REFERENCES inventory ( id );

ALTER TABLE expense
    ADD CONSTRAINT expense_job_fk FOREIGN KEY ( job_id )
        REFERENCES job ( id );

ALTER TABLE job
    ADD CONSTRAINT job_customer_fk FOREIGN KEY ( customer_id )
        REFERENCES customer ( id );

ALTER TABLE subcontract
    ADD CONSTRAINT job_sub_job_fk FOREIGN KEY ( job_id )
        REFERENCES job ( id );

ALTER TABLE subcontract
    ADD CONSTRAINT job_sub_sub_fk FOREIGN KEY ( sub_id )
        REFERENCES subcontractor ( id );

CREATE SEQUENCE customer_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER customer_id_trg BEFORE
    INSERT ON customer
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := customer_id_seq.nextval;
END;
/

CREATE SEQUENCE expense_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER expense_id_trg BEFORE
    INSERT ON expense
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := expense_id_seq.nextval;
END;
/

CREATE SEQUENCE inventory_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER inventory_id_trg BEFORE
    INSERT ON inventory
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := inventory_id_seq.nextval;
END;
/

CREATE SEQUENCE job_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER job_id_trg BEFORE
    INSERT ON job
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := job_id_seq.nextval;
END;
/

CREATE SEQUENCE pricelist_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER pricelist_id_trg BEFORE
    INSERT ON pricelist
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := pricelist_id_seq.nextval;
END;
/

CREATE SEQUENCE subcontractor_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER subcontractor_id_trg BEFORE
    INSERT ON subcontractor
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := subcontractor_id_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             7
-- CREATE INDEX                             0
-- ALTER TABLE                             13
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           6
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          6
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0


insert into customer (lastname, firstname, address, telephone, email, priority)
values ('Giannopoulos', 'Steven', '6987 Fairview, Chicago, IL', 93828170382, 
        'steve.gian@hotmail.com', 'Low');
        
update customer
set telephone = 9382810382
where firstname = 'Steven';

update customer
set email = 'comacris01@gmail.com'
where firstname = 'Constantine';

insert into customer (lastname, firstname, address, telephone, email, priority)
values ('Moschovis', 'Sotiria', '6127 N Leader Ave, Chicago, IL', 7739128761, 
        'moschovis@gmail.com', 'High');
insert into customer (lastname, firstname, address, telephone, email, priority)
values ('Macris', 'Constantine', '6127 N Leader Ave, Chicago, IL', 6973187491, 
        'macris.constantine@gmail.com', 'High');
insert into customer (lastname, firstname, address, telephone, email)
values ('Clarkson', 'Brent', '9 Westpark Dr, Park Ridge, IL', 0986765453, 
        'blarckson@gmail.com');
insert into customer (lastname, firstname, address, telephone, email, priority)
values ('Smith', 'Mark', '8 Grove Ave, Cedarville, OH', 7739128761, 
        'smarkson@yahoo.com', 'Very Low');
insert into customer (lastname, firstname, address, telephone, email, priority)
values ('Romisch', 'Tim', '6 Westwood Dr, Bloomfield Hills, MI', 7739128761, 
        'moschovis@gmail.com', 'High');
        
update customer
set email = 'timnpeggy@gmail.com'
where lastname = 'Romisch';
delete from customer
where firstname = 'Constantine';

insert into expense (description, cost, reimbursable)
values ('gas', 30, 'yes');
insert into expense (description, cost, customer_id, reimbursable)
values ('modem', 80, 31, 'yes');
insert into expense (description, cost, job_id, reimbursable)
values ('3m ethernet cables', 12.75, 7, 'yes');

insert into inventory (item, quantity, consumable)
values ('pack of screws', 4, 'yes');
insert into inventory (item, quantity, consumable)
values ('lg moving boxes', 3, 'yes');
insert into inventory (item, quantity, consumable)
values ('box of zipties', 2, 'yes');
insert into inventory (item, quantity, consumable)
values ('labelling tape', 6, 'yes');
insert into inventory (item, quantity, consumable)
values ('complete driver set', 1, 'no');

insert into expense (description, cost, inventory_id, reimbursable)
values ('screws', 10.00, 4, 'yes');
insert into expense (description, cost, job_id, inventory_id, reimbursable)
values ('labelling tape', 8.00, 7, 15, 'yes');

update expense
set reimbursable = 'no'
where id = 18;

update expense
set job_id = 20
where id = 19;

insert into job (description, address, distance_km, drive_time_hrs,
                start_time, end_time, status, customer_id, payment)
values ('Router box re-location', '205 W Wacker Dr Suite 100, Chicago, IL', 24,
        2, '02-MAR-2020 08:01', '01-MAY-2020 08:23', 'COMPLETE', 34, 1200);
insert into job (description, address, distance_km, drive_time_hrs,
                start_time, end_time, status, customer_id, payment)
values ('router box installation', '815 N Slacker Ln, Chicago, IL', 78,
        5.5, '18-FEB-2020 10:00', '19-FEB-2020 03:00', 'COMPLETE', 34, 300);
insert into job (description, address, distance_km, drive_time_hrs,
                start_time, status, customer_id)
values ('LAN system configuration', '998 N Seeker Bvd, Niles, IL', 12,
        1.2, '06-MAY-2020 12:01', 'UPCOMING', 31);
insert into job (description, address, distance_km, drive_time_hrs,
                start_time, end_time, status, customer_id, payment)
values ('telecom installation', '8 Grove Ave, Cedarville, OH', 350,
        6.5, '11-JUN-2020 05:00', '13-JUN-2020 08:00', 'COMPLETE', 35, 2200);
insert into job (description, address, distance_km, drive_time_hrs,
                start_time, end_time, status, customer_id, payment)
values ('network wiring', '6987 Fairview, Chicago, IL', 21,
        0.5, '20-JUN-2020 05:00', '21-JUN-2020 08:00', 'COMPLETE', 31, 650);
insert into job (description, address, distance_km, drive_time_hrs,
                start_time, end_time, status, customer_id, payment)
values ('network system repair', '6 Westwood Dr, Bloomfield Hills, MI', 378,
        4.5, '13-OCT-2021 09:00', '14-OCT-2021 08:00', 'COMPLETE', 36, 500);
        
delete from job
where description like '%LAN%' and customer_id = 31;


update job
set end_time = '21-JUN-2020 10:30'
where id = 20;

update job
set end_time = to_timestamp('13-OCT-2021 16:45', 'DD-MON-YYYY HH24:MI')
where id = 21;

update customer
set telephone = 8928193084
where firstname = 'Brent';

update customer
set telephone = 3192089112
where firstname = 'Mark';

update customer
set telephone = 2190938172
where firstname = 'Tim';

alter table job
modify start_time timestamp;

alter table job
drop column job_date;

alter table job
modify end_time timestamp;

select to_char(start_time, 'HH24:MI') from job;

delete from job
where id = '8';

insert into pricelist (work_type, rate_per_hr)
values ('computer system installation', 50);
insert into pricelist (work_type, rate_per_hr)
values ('applicance re-location', 30);
insert into pricelist (work_type, rate_per_hr)
values ('moderately useful assistance', 22);
insert into pricelist (work_type, rate_per_hr)
values ('software debugging', 35);
insert into pricelist (work_type, rate_per_hr)
values ('telecom system maintenance', 40);

update pricelist
set rate_per_hr = 15
where id = 10;

alter table pricelist
modify work_type varchar(50);

insert into subcontractor (specialty, sub_name, sub_first, rate_per_hr,
                            wks_until_able, sub_address, sub_tel, sub_email)
values ('electrical wiring', 'Hanson', 'James', 35, 2, 
        '12 Clearview Dr 743, Wheaton, IL', 7739183891, 'hansjam@gmail.com');
insert into subcontractor (specialty, sub_name, sub_first, rate_per_hr,
                            wks_until_able, sub_address, sub_tel, sub_email)
values ('being available', 'Macris', 'Constantine', 20, 0, 
        'Ippolitou 10, 11255 Athens, Greece', 7739183891, 'comacris01@gmail.com');
insert into subcontractor (specialty, sub_name, sub_first, rate_per_hr,
                            wks_until_able, sub_address, sub_tel, sub_email)
values ('digital media software', 'George', 'Ryan', 33, 5, 
        '9124 Bognatti Ln, San Diego, FL', 8171989023, 'hihellothere@gmail.com');
insert into subcontractor (specialty, sub_name, sub_first, rate_per_hr,
                            wks_until_able, sub_address, sub_tel, sub_email)
values ('heavy moving', 'Paul', 'Chris', 45, 10, 
        '4931 W Northshire Ave, Cleveland OH', 7739183891, 'pgeorgeous@acg.edu');
insert into subcontractor (specialty, sub_name, sub_first, rate_per_hr,
                            wks_until_able, sub_address, sub_tel, sub_email)
values ('audiovisual cabling', 'Gaye', 'Marvin', 99, 20, 
        '605 Stoneybrook Rd, W Hollywood, CA', 7739183891, 'comacris01@gmail.com');
        
update subcontractor
set sub_tel = 9912380981
where sub_name = 'Paul';

alter table subcontractor
modify specialty varchar(30);

insert into subcontract (sub_id, job_id)
values (3,7);
insert into subcontract (sub_id, job_id)
values (3,21);
insert into subcontract (sub_id, job_id)
values (1,20);
insert into subcontract (sub_id, job_id)
values (8,7);
insert into subcontract (sub_id, job_id)
values (9,19);

update job
set description = 'router box re-location'
where description = 'Router box re-location';

update expense
set job_id = 7, customer_id = 34
where id = 9;

update expense
set job_id = 19, customer_id = 35
where id = 7;

alter table pricelist
add constraint not_negative check (rate_per_hr >=0);

alter table subcontractor
add constraint positive_num check (rate_per_hr >=0);

alter table job
add constraint non_negative check (payment >= 0);

alter table inventory
add constraint greater_zero check (quantity >= 0);

alter table inventory
modify quantity default 1;

update pricelist
set work_type = 'computer hardware installation';

update job
set payment = -40;

update job
set customer_id = 32
where customer_id = 31;

delete from job where id = 18;

update job
set status = 'ACTIVE'
where id = 21;

update job
set payment = 2000
where customer_id = 32
and payment is null;

--displays jobs with a status of 'complete' and payment over 1000
create view view1 as    
SELECT description, status, payment 
FROM job
WHERE status = 'COMPLETE'
AND payment > 1000;

--joins and displays customers with corresponding jobs
create view view2 as
SELECT firstname || ' ' || lastname as "CUSTOMER NAME", 
        description as "JOB DESCRIPTION", status, payment 
FROM customer
JOIN job on (job.customer_id = customer.id);

--repeats previous statement but includes customer no job assignment
create view view3 as
SELECT firstname || ' ' || lastname as "CUSTOMER NAME", 
        description as "JOB DESCRIPTION", status, payment 
FROM customer
LEFT OUTER JOIN job on (job.customer_id = customer.id);

--displays the sum of job payments from customers, grouped by customer 
create view view4 as
SELECT customer.id, firstname || ' ' || lastname AS "NAME", 
        Count(payment) AS "NO. OF PAYMENTS",
        SUM(payment) AS "TOTAL PAYMENT"
FROM job JOIN customer ON (job.customer_id = customer.id)
GROUP BY customer.id, firstname, lastname;

--enhances previous statement to include group condition 
create view view5 as
SELECT customer.id, firstname || ' ' || lastname AS "NAME", 
        Count(payment) AS "NO. OF PAYMENTS",
        SUM(payment) AS "TOTAL PAYMENT"
FROM job JOIN customer ON (job.customer_id = customer.id)
GROUP BY customer.id, firstname, lastname
HAVING Sum(payment) > 2000;

--displays duration (or planned duration) of active and completed jobs
create view view6 as
SELECT description, CONCAT(to_char(start_time, 'DD-MON-YYYY HH24:MI --- '),
        to_char(end_time, 'DD-MON-YYYY HH24:MI'))
        AS "JOB DURATIONS"
FROM job
WHERE status != 'UPCOMING'
ORDER BY start_time ASC;

--displays subcontractors joined with their respective jobs and using a subquery 
--from the expenses table to specify only the subcontracted jobs that incurred 
--additional expenses over 10 dollars
create view view7 as
SELECT sub_name, specialty, job_id, description
FROM subcontractor 
JOIN subcontract on (subcontract.sub_id = subcontractor.id)
JOIN job on (subcontract.job_id = job.id)
WHERE job_id IN (SELECT job_id FROM expense WHERE cost > 10);

select * from view7;